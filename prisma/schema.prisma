// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String
  email      String     @unique
  password   String
  status     Boolean
  created_at DateTime   @default(now())
  update_at  DateTime   @updatedAt
  role       Role
  activity   Activity[]
}

enum Role {
  operator
  admin
  visitor
}

model Activity {
  id             Int         @id @default(autoincrement())
  session_time   Int
  description    String
  date_init      DateTime
  date_finish    DateTime
  user_id        Int
  user           User        @relation(fields: [user_id], references: [id])
  ticket_id      Int
  ticket         Ticket      @relation(fields: [ticket_id], references: [id])
  task_status_id Int
  tast_status    Task_status @relation(fields: [task_status_id], references: [id])
}

model Ticket {
  id              Int             @id @default(autoincrement())
  name            String
  admission_date  DateTime
  type_customer   Type_customer
  platform        String
  status          Int
  production_date DateTime
  type_ticket     Type_ticket
  created_at      DateTime        @default(now())
  update_at       DateTime        @updatedAt
  activity        Activity[]
  ticket_date     ticket_date[]
  customer_id     Int
  customer        Customer        @relation(fields: [customer_id], references: [id])
  ticket_status   Ticket_status[]
  Ticket_detail   Ticket_detail[]
}

enum Type_customer {
  ggee
  massive
}

enum Type_ticket {
  entry
  reentry
  postsale
  returned
}

model ticket_date {
  id            Int      @id @default(autoincrement())
  date_init     DateTime
  date_complete DateTime
  date_cancel   DateTime
  date_standby  DateTime
  created_at    DateTime @default(now())
  update_at     DateTime @updatedAt
  ticket_id     Int
  ticket        Ticket   @relation(fields: [ticket_id], references: [id])
}

model Customer {
  id            Int      @id @default(autoincrement())
  fullname      String
  email         String
  phone         String
  contact       String
  code          Int
  business_name String
  business_ruc  String
  status        String
  created_at    DateTime @default(now())
  update_at     DateTime @updatedAt
  Ticket        Ticket[]
}

model Status {
  id            Int             @id @default(autoincrement())
  name          String
  description   String
  created_at    DateTime        @default(now())
  update_at     DateTime        @updatedAt
  Ticket_status Ticket_status[]
}

model Task_status {
  id         Int        @id @default(autoincrement())
  name       String
  created_at DateTime   @default(now())
  update_at  DateTime   @updatedAt
  Activity   Activity[]
  reason     String
}

model Ticket_status {
  id          Int      @id @default(autoincrement())
  ticket_id   Int
  ticket      Ticket   @relation(fields: [ticket_id], references: [id])
  status_id   Int
  status      Status   @relation(fields: [status_id], references: [id])
  description String
  reason      String
  created_at  DateTime @default(now())
  update_at   DateTime @updatedAt
}

model Type_development {
  id                  Int                 @id @default(autoincrement())
  name                String
  description         String
  type_implementation Type_implementation
  created_at          DateTime            @default(now())
  update_at           DateTime            @updatedAt
  Ticket_detail       Ticket_detail[]
}

enum Type_implementation {
  cms
  code
  shop
}

model Ticket_detail {
  id                  Int              @id @default(autoincrement())
  type_development_id Int
  type_development    Type_development @relation(fields: [type_development_id], references: [id])
  ticket_id           Int
  ticket              Ticket           @relation(fields: [ticket_id], references: [id])
}
