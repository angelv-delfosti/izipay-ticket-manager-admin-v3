// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String
  email      String     @unique
  password   String
  status     Boolean
  created_at DateTime   @default(now())
  update_at  DateTime   @updatedAt
  role       Role
  activity   Activity[]
}

enum Role {
  operator
  admin
  visitor
}

model Activity {
  id           Int      @id @default(autoincrement())
  session_time Int
  description  String
  date_init    DateTime
  date_finish  DateTime
  user_id      Int
  user         User     @relation(fields: [user_id], references: [id])
  ticket_id    Int
  ticket       Ticket   @relation(fields: [ticket_id], references: [id])
}

model Ticket {
  id              Int           @id @default(autoincrement())
  name            String
  admission_date  DateTime
  type_customer   Type_customer
  platform        String
  status          Int
  production_date DateTime
  type_ticket     Type_ticket
  created_at      DateTime      @default(now())
  update_at       DateTime      @updatedAt
  activity        Activity[]
  ticket_date     ticket_date[]
}

enum Type_customer {
  ggee
  massive
}

enum Type_ticket {
  entry
  reentry
  postsale
  returned
}

model ticket_date {
  id            Int      @id @default(autoincrement())
  date_init     DateTime
  date_complete DateTime
  date_cancel   DateTime
  date_standby  DateTime
  created_at    DateTime @default(now())
  update_at     DateTime @updatedAt
  ticket_id     Int
  ticket        Ticket   @relation(fields: [ticket_id], references: [id])
}

// model customer {
//   id            Int      @id @default(autoincrement())
//   fullname      String
//   email         String
//   phone         String
//   contact       String
//   business_name String
//   business_ruc  String
//   status        String
//   created_at    DateTime @default(now())
//   update_at     DateTime @updatedAt
// }
